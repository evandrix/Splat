#!/usr/bin/env python
# -*- coding: utf-8 -*-
# run nosetests for directory 'tests': `nosetests -v -s -w tests`

import os
import sys
import time
import re
import pprint
import random
import types
import unittest
from {{module_name}} import *
{{#all_imports}}
import {{module}}
{{/all_imports}}

class DevNull(object):
    def __init__(self, *writers):
        self.writers = writers
    def write(self, text):
       return
def f_noarg(self):
   return
def f_varg(self, *args, **kwargs):
   return
                
class TestProgram(unittest.TestCase):
    def setUp(self):
        # suppress program output streams
        sys.stdout = DevNull(sys.stdout)
        sys.stderr = DevNull(sys.stderr)
        # reference module under test
        self.{{module_name}} = __import__('{{module_name}}')
    def tearDown(self):
        sys.stdout = sys.__stdout__
        sys.stderr = sys.__stderr__
        del self.{{module_name}}

    def assertNotRaises(self, function, *args, **kwargs):
        with self.assertRaises(Exception):
            try:
                function(*args, **kwargs)
            except:
                pass
            else:
                raise Exception

{{#all_tests}}
    def test_{{fn_name}}_{{test_name}}(self{{add_params}}): {{stmts}}
{{/all_tests}}
if __name__ == '__main__':
    unittest.main()