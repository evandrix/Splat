 Targeted for 0.5 Alpha 4

    * 'ILoadingService', 'IObjectLoader' and 'load:kind@URL' scheme

    * peak.config

      - "service zones" or "service groups" to do smarter service groupings

      - Replace IMainLoop activity monitoring with a plugin-based mechanism?

      - plugin keys ordered by definition sequence, rather than randomly

      - ZConfig factory support to allow "smart" interpretation of strings,
        section names, etc.

      - Writable and subscribable config sources, including editable .ini's

    * peak.running.logs

      - Separate formatters from publishers

      - ZConfig schema for logging plugins, allowing multiple handlers/category

    * peak.running.commands

       - Add "error formatting" and "error reporting" services

       - Add option parsing framework based on optparse (backported to 2.2)

    * peak.binding

      - Cleanup/document attribute binding interface

    * peak.running.timers

      - Factor out state into separate object so timers aren't shared state

      - Look at possible integration of peak.query and cursor formatters, in
        order to view stats as an in-memory mini-DB w/reporting.


    * Transaction/storage refactorings

      - transaction scopes for commands and tasks

      - integrate locks with transactions

      - transactable persistent queues

      - DM.find()/DM.get() queries

    * peak.web

       - clean up DOMlet parse/build framework (e.g. add line number info, make
         'define' clauses allow multiple names)

       - default error templates, w/useful info

       - A set of simple, basic form controls that handle value rendering only
         (form metadata, validation, etc. will be handled by peak.web.forms in
         a later release)

       - try/catch DOMlet (and related error rendering interface/framework)

       - allow use of // in DOMlets' data paths, to access resource space

       - DOMlets for layout/region, as defined in "A layout framework":http://www.eby-sarna.com/pipermail/transwarp/2003-August/000684.html

       - conditional GET support (last modified/ETag) for static resources

       - image resources

       - the return of the Specialist

    * Have a way to easily in-line custom component usage (e.g. automatically
      create a subclass component with specified 'Obtain' or 'Make' bindings to
      get its configuration).

    * Drop 'persistence' package, since ZODB 4 has been derailed.  Change to
      "state-delegation" model, which will integrate better with 'peak.query'.


 Targeted for 0.5 Beta 1

    * Up-to-date reference docstrings for all packages

    * Finish tutorial chapter 2 (?)

    * Web publishing framework sufficient to deploy page-based or object-
      published apps



 Targeted for 0.5 Final Release (or sooner)

    peak.storage

        - unit tests for more complex object scenarios: references, thunks..?

    peak.naming

        - useful example "flat" naming context (e.g. like AppUtils.URLkeys)

        - useful example hierarchical naming context (e.g. like JNDI's LDAP
          context or a filesystem context)

        - rework smtp: to return a factory object that supports open().
          Also think about whether smtp should move to peak.net?















 Targeted for version 0.6

   * Functional/acceptance tests that access "real" databases, LDAP, etc.

   * Get XMI writing in place, w/transaction support

   * Generate UML 1.5 and CWM 1.0 and 1.1, and add them to the
     'setup.py' package lists.

   * On-the-fly class combination (think "runtime module inheritance",
     but possibly without the modules) for DMs.

   * Lock management interfaces/API for peak.storage

   * Support for sending and receiving remote cache invalidation
     messages between DataManagers.

   * Make 'cluster' parser complain about things that would cause
     the clusterit tools to choke or barf on the file, or which would
     produce ambiguous or unintended results.  (Or replace with ZConfig
     schema that can generate clusterit files.  And/or replace clusterit
     tools with PEAK ones.)



















