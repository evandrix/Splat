[{"fn_name": "as_number", "stmts_list": ["self.assertNotRaises(self.module.as_number, *[None])", "self.assertIsNone(self.module.as_number(*[None]))"], "add_params": null, "test_name": "all_None"}, {"fn_name": "as_number", "stmts_list": ["self.assertNotRaises(self.module.as_number, *[None])", "self.assertIsNone(self.module.as_number(*[None]))"], "add_params": null, "test_name": "all_attr_None_wdef"}, {"fn_name": "as_number", "stmts_list": ["self.assertNotRaises(self.module.as_number, *[None])", "self.assertIsNone(self.module.as_number(*[None]))"], "add_params": null, "test_name": "all_attr_MetaParam_wdef"}, {"fn_name": "as_number", "stmts_list": ["Param1 = type('',(object,), {})()", "self.assertNotRaises(self.module.as_number, *[Param1])", "self.assertEqualClassName(self.module.as_number(*[Param1]), 'Param1', 'incorrect class name for return value encountered')", "self.assertEqualAttrs(self.module.as_number(*[Param1]), '{\"index\": 1, \"dct\": {}, \"attr\": null}', 'incorrect attributes for return value encountered')"], "add_params": null, "test_name": "31e6a59314d94b6bb4a26df7265106f7"}, {"fn_name": "argmin", "stmts_list": ["self.assertRaises(TypeError, self.module.argmin, *[None])"], "add_params": null, "test_name": "all_None"}, {"fn_name": "argmin", "stmts_list": ["self.assertRaises(TypeError, self.module.argmin, *[None])"], "add_params": null, "test_name": "all_attr_None_wdef"}, {"fn_name": "argmin", "stmts_list": ["self.assertRaises(TypeError, self.module.argmin, *[None])"], "add_params": null, "test_name": "all_attr_MetaParam_wdef"}, {"fn_name": "argmin", "stmts_list": ["Param1 = type('',(object,), {})()", "self.assertRaises(TypeError, self.module.argmin, *[Param1])"], "add_params": null, "test_name": "ad4efc0a06c14ec7a1df5cf0d8155530"}, {"fn_name": "argmin", "stmts_list": ["Param1 = type('',(object,), {})()", "self.assertRaises(TypeError, self.module.argmin, *[Param1])"], "add_params": null, "test_name": "4ed680dcd03e480c9e3eee2150fa705c"}, {"fn_name": "argmin", "stmts_list": ["Param1 = type('',(object,), {})()", "self.assertRaises(TypeError, self.module.argmin, *[Param1])"], "add_params": null, "test_name": "30d973a6ece64248948dc7ad199f7ac3"}, {"fn_name": "isint", "stmts_list": ["self.assertNotRaises(self.module.isint, *[None])", "self.assertEqual(self.module.isint(*[None]), False, 'incorrect function return value encountered')"], "add_params": null, "test_name": "all_None"}, {"fn_name": "isint", "stmts_list": ["self.assertNotRaises(self.module.isint, *[None])", "self.assertEqual(self.module.isint(*[None]), False, 'incorrect function return value encountered')"], "add_params": null, "test_name": "all_attr_None_wdef"}, {"fn_name": "isint", "stmts_list": ["self.assertNotRaises(self.module.isint, *[None])", "self.assertEqual(self.module.isint(*[None]), False, 'incorrect function return value encountered')"], "add_params": null, "test_name": "all_attr_MetaParam_wdef"}, {"fn_name": "isint", "stmts_list": ["Param1 = type('',(object,), {})()", "self.assertNotRaises(self.module.isint, *[Param1])", "self.assertEqual(self.module.isint(*[Param1]), False, 'incorrect function return value encountered')"], "add_params": null, "test_name": "caf54bb775384cec8b5835fa675dcc63"}, {"fn_name": "factorial", "stmts_list": ["self.assertRaises(ArithmeticError, self.module.factorial, *[None])"], "add_params": null, "test_name": "all_None"}, {"fn_name": "factorial", "stmts_list": ["self.assertRaises(ArithmeticError, self.module.factorial, *[None])"], "add_params": null, "test_name": "all_attr_None_wdef"}, {"fn_name": "factorial", "stmts_list": ["self.assertRaises(ArithmeticError, self.module.factorial, *[None])"], "add_params": null, "test_name": "all_attr_MetaParam_wdef"}, {"fn_name": "factorial", "stmts_list": ["Param1 = type('',(object,), {})()", "self.assertRaises(TypeError, self.module.factorial, *[Param1])"], "add_params": null, "test_name": "01b0d3dfcbfb45179f727d45af77c8b4"}, {"fn_name": "factorial", "stmts_list": ["self.assertNotRaises(self.module.factorial, *[0])", "self.assertEqual(self.module.factorial(*[0]), 1, 'incorrect function return value encountered')"], "add_params": null, "test_name": "8d7ff0c9efc147a88fedb9b1f2c1faec"}, {"fn_name": "factorial", "stmts_list": ["self.assertEqual(479001600, self.module.factorial(12))"], "add_params": null, "test_name": 4340135040}, {"fn_name": "factorial", "stmts_list": ["self.assertEqual(24, self.module.factorial(4))"], "add_params": null, "test_name": 4340135232}, {"fn_name": "factorial", "stmts_list": ["self.assertEqual(1, self.module.factorial(1))"], "add_params": null, "test_name": 4340135304}, {"fn_name": "factorial", "stmts_list": ["self.assertEqual(720, self.module.factorial(6))"], "add_params": null, "test_name": 4340135184}, {"fn_name": "factorial", "stmts_list": ["self.assertEqual(1124000727777607680000L, self.module.factorial(22))"], "add_params": null, "test_name": 4340134800}, {"fn_name": "factorial", "stmts_list": ["self.assertEqual(6, self.module.factorial(3))"], "add_params": null, "test_name": 4340135256}, {"fn_name": "factorial", "stmts_list": ["self.assertEqual(355687428096000, self.module.factorial(17))"], "add_params": null, "test_name": 4340134920}, {"fn_name": "factorial", "stmts_list": ["self.assertEqual(39916800, self.module.factorial(11))"], "add_params": null, "test_name": 4340135064}, {"fn_name": "factorial", "stmts_list": ["self.assertEqual(15511210043330985984000000L, self.module.factorial(25))"], "add_params": null, "test_name": 4340134728}, {"fn_name": "factorial", "stmts_list": ["self.assertEqual(304888344611713860501504000000L, self.module.factorial(28))"], "add_params": null, "test_name": 4340134656}, {"fn_name": "factorial", "stmts_list": ["self.assertEqual(20922789888000, self.module.factorial(16))"], "add_params": null, "test_name": 4340134944}, {"fn_name": "factorial", "stmts_list": ["self.assertEqual(403291461126605635584000000L, self.module.factorial(26))"], "add_params": null, "test_name": 4340134704}, {"fn_name": "factorial", "stmts_list": ["self.assertEqual(51090942171709440000L, self.module.factorial(21))"], "add_params": null, "test_name": 4340134824}, {"fn_name": "factorial", "stmts_list": ["self.assertEqual(3628800, self.module.factorial(10))"], "add_params": null, "test_name": 4340135088}, {"fn_name": "factorial", "stmts_list": ["self.assertEqual(8683317618811886495518194401280000000L, self.module.factorial(33))"], "add_params": null, "test_name": 4340134536}, {"fn_name": "factorial", "stmts_list": ["self.assertEqual(8222838654177922817725562880000000L, self.module.factorial(31))"], "add_params": null, "test_name": 4340134584}, {"fn_name": "factorial", "stmts_list": ["self.assertEqual(5040, self.module.factorial(7))"], "add_params": null, "test_name": 4340135160}, {"fn_name": "factorial", "stmts_list": ["self.assertEqual(2432902008176640000, self.module.factorial(20))"], "add_params": null, "test_name": 4340134848}, {"fn_name": "factorial", "stmts_list": ["self.assertEqual(1, self.module.factorial(0))"], "add_params": null, "test_name": 4340135328}, {"fn_name": "factorial", "stmts_list": ["self.assertEqual(6402373705728000, self.module.factorial(18))"], "add_params": null, "test_name": 4340134896}, {"fn_name": "factorial", "stmts_list": ["self.assertEqual(362880, self.module.factorial(9))"], "add_params": null, "test_name": 4340135112}, {"fn_name": "factorial", "stmts_list": ["self.assertEqual(87178291200, self.module.factorial(14))"], "add_params": null, "test_name": 4340134992}, {"fn_name": "factorial", "stmts_list": ["self.assertEqual(1307674368000, self.module.factorial(15))"], "add_params": null, "test_name": 4340134968}, {"fn_name": "factorial", "stmts_list": ["self.assertEqual(10333147966386144929666651337523200000000L, self.module.factorial(35))"], "add_params": null, "test_name": 4340134488}, {"fn_name": "factorial", "stmts_list": ["self.assertEqual(263130836933693530167218012160000000L, self.module.factorial(32))"], "add_params": null, "test_name": 4340134560}, {"fn_name": "factorial", "stmts_list": ["self.assertEqual(120, self.module.factorial(5))"], "add_params": null, "test_name": 4340135208}, {"fn_name": "factorial", "stmts_list": ["self.assertEqual(13763753091226345046315979581580902400000000L, self.module.factorial(37))"], "add_params": null, "test_name": 4340136416}, {"fn_name": "factorial", "stmts_list": ["self.assertEqual(620448401733239439360000L, self.module.factorial(24))"], "add_params": null, "test_name": 4340134752}, {"fn_name": "factorial", "stmts_list": ["self.assertEqual(2, self.module.factorial(2))"], "add_params": null, "test_name": 4340135280}, {"fn_name": "factorial", "stmts_list": ["self.assertEqual(371993326789901217467999448150835200000000L, self.module.factorial(36))"], "add_params": null, "test_name": 4340136440}, {"fn_name": "factorial", "stmts_list": ["self.assertEqual(8841761993739701954543616000000L, self.module.factorial(29))"], "add_params": null, "test_name": 4340134632}, {"fn_name": "factorial", "stmts_list": ["self.assertEqual(40320, self.module.factorial(8))"], "add_params": null, "test_name": 4340135136}, {"fn_name": "factorial", "stmts_list": ["self.assertEqual(10888869450418352160768000000L, self.module.factorial(27))"], "add_params": null, "test_name": 4340134680}, {"fn_name": "factorial", "stmts_list": ["self.assertEqual(295232799039604140847618609643520000000L, self.module.factorial(34))"], "add_params": null, "test_name": 4340134512}, {"fn_name": "factorial", "stmts_list": ["self.assertEqual(6227020800, self.module.factorial(13))"], "add_params": null, "test_name": 4340135016}, {"fn_name": "factorial", "stmts_list": ["self.assertEqual(121645100408832000, self.module.factorial(19))"], "add_params": null, "test_name": 4340134872}, {"fn_name": "factorial", "stmts_list": ["self.assertEqual(25852016738884976640000L, self.module.factorial(23))"], "add_params": null, "test_name": 4340134776}, {"fn_name": "factorial", "stmts_list": ["self.assertEqual(265252859812191058636308480000000L, self.module.factorial(30))"], "add_params": null, "test_name": 4340134608}, {"fn_name": "approx_equal", "stmts_list": ["self.assertRaises(TypeError, self.module.approx_equal, *[None, None, None, None])"], "add_params": null, "test_name": "all_None"}, {"fn_name": "approx_equal", "stmts_list": ["self.assertRaises(TypeError, self.module.approx_equal, *[None, None, None, None])"], "add_params": null, "test_name": "all_attr_None_wdef"}, {"fn_name": "approx_equal", "stmts_list": ["self.assertRaises(TypeError, self.module.approx_equal, *[None, None, None, None])"], "add_params": null, "test_name": "all_attr_MetaParam_wdef"}, {"fn_name": "approx_equal", "stmts_list": ["Param1 = type('',(object,), {})()", "Param2 = type('',(object,), {})()", "Param3 = type('',(object,), {})()", "Param4 = type('',(object,), {})()", "self.assertRaises(TypeError, self.module.approx_equal, *[Param1, Param2, Param3, Param4])"], "add_params": null, "test_name": "2146bade19504f498c783c5a8683c15c"}, {"fn_name": "approx_equal", "stmts_list": ["Param2 = type('',(object,), {})()", "Param3 = type('',(object,), {})()", "Param4 = type('',(object,), {})()", "self.assertRaises(TypeError, self.module.approx_equal, *[0, Param2, Param3, Param4])"], "add_params": null, "test_name": "265fbaa69c67493491ecf4ad4a815af8"}, {"fn_name": "approx_equal", "stmts_list": ["Param3 = type('',(object,), {})()", "Param4 = type('',(object,), {})()", "self.assertNotRaises(self.module.approx_equal, *[0, 0, Param3, Param4])", "self.assertEqual(self.module.approx_equal(*[0, 0, Param3, Param4]), True, 'incorrect function return value encountered')"], "add_params": null, "test_name": "7ca9cc0d97a642cc867f78b9209493d3"}, {"fn_name": "approx_equal", "stmts_list": ["Param3 = type('',(object,), {})()", "Param4 = type('',(object,), {})()", "self.assertNotRaises(self.module.approx_equal, *[-4655114418234116396, 0, Param3, Param4])", "self.assertEqual(self.module.approx_equal(*[-4655114418234116396, 0, Param3, Param4]), True, 'incorrect function return value encountered')"], "add_params": null, "test_name": "494f01ec03334a448e889a47110c7a3f"}, {"fn_name": "approx_equal", "stmts_list": ["Param3 = type('',(object,), {})()", "Param4 = type('',(object,), {})()", "self.assertNotRaises(self.module.approx_equal, *[-6131897808919339136, 0, Param3, Param4])", "self.assertEqual(self.module.approx_equal(*[-6131897808919339136, 0, Param3, Param4]), True, 'incorrect function return value encountered')"], "add_params": null, "test_name": "e16ffff2da044d2b964631dc136a02f2"}, {"fn_name": "approx_equal", "stmts_list": ["Param3 = type('',(object,), {})()", "Param4 = type('',(object,), {})()", "self.assertNotRaises(self.module.approx_equal, *[-6125374539477339154, 0, Param3, Param4])", "self.assertEqual(self.module.approx_equal(*[-6125374539477339154, 0, Param3, Param4]), True, 'incorrect function return value encountered')"], "add_params": null, "test_name": "7611746f797649c081a9aeec5ff9f37d"}, {"fn_name": "approx_equal", "stmts_list": ["Param3 = type('',(object,), {})()", "Param4 = type('',(object,), {})()", "self.assertNotRaises(self.module.approx_equal, *[-2636873581161505499, 0, Param3, Param4])", "self.assertEqual(self.module.approx_equal(*[-2636873581161505499, 0, Param3, Param4]), True, 'incorrect function return value encountered')"], "add_params": null, "test_name": "9566e0c92ca645df899ba326536be2f3"}, {"fn_name": "approx_equal", "stmts_list": ["Param3 = type('',(object,), {})()", "Param4 = type('',(object,), {})()", "self.assertNotRaises(self.module.approx_equal, *[-2420807821085804151, 0, Param3, Param4])", "self.assertEqual(self.module.approx_equal(*[-2420807821085804151, 0, Param3, Param4]), True, 'incorrect function return value encountered')"], "add_params": null, "test_name": "f5d5a33386c040d8b272f067c21cb99e"}, {"fn_name": "approx_equal", "stmts_list": ["Param3 = type('',(object,), {})()", "Param4 = type('',(object,), {})()", "self.assertNotRaises(self.module.approx_equal, *[-3409018997018743123, 0, Param3, Param4])", "self.assertEqual(self.module.approx_equal(*[-3409018997018743123, 0, Param3, Param4]), True, 'incorrect function return value encountered')"], "add_params": null, "test_name": "b4f731f2232843228fbb8a80669f5d6f"}, {"fn_name": "approx_equal", "stmts_list": ["Param3 = type('',(object,), {})()", "Param4 = type('',(object,), {})()", "self.assertNotRaises(self.module.approx_equal, *[-180, 0, Param3, Param4])", "self.assertEqual(self.module.approx_equal(*[-180, 0, Param3, Param4]), True, 'incorrect function return value encountered')"], "add_params": null, "test_name": "2b3701d80de34b40b176c7e62aabd25f"}, {"fn_name": "approx_equal", "stmts_list": ["Param3 = type('',(object,), {})()", "Param4 = type('',(object,), {})()", "self.assertNotRaises(self.module.approx_equal, *[-330, 0, Param3, Param4])", "self.assertEqual(self.module.approx_equal(*[-330, 0, Param3, Param4]), True, 'incorrect function return value encountered')"], "add_params": null, "test_name": "45818dc9e91e41c391fa3047dca9e474"}, {"fn_name": "approx_equal", "stmts_list": ["Param3 = type('',(object,), {})()", "Param4 = type('',(object,), {})()", "self.assertNotRaises(self.module.approx_equal, *[-421, 0, Param3, Param4])", "self.assertEqual(self.module.approx_equal(*[-421, 0, Param3, Param4]), True, 'incorrect function return value encountered')"], "add_params": null, "test_name": "dabfaa6cf7b94610b81262c7f9894fef"}, {"fn_name": "approx_equal", "stmts_list": ["Param3 = type('',(object,), {})()", "Param4 = type('',(object,), {})()", "self.assertNotRaises(self.module.approx_equal, *[0, 0, Param3, Param4])", "self.assertEqual(self.module.approx_equal(*[0, 0, Param3, Param4]), True, 'incorrect function return value encountered')"], "add_params": null, "test_name": "28fbe40318ce42a7a5fd1ee28e14458d"}, {"fn_name": "approx_equal", "stmts_list": ["Param3 = type('',(object,), {})()", "Param4 = type('',(object,), {})()", "self.assertNotRaises(self.module.approx_equal, *[0, 0, Param3, Param4])", "self.assertEqual(self.module.approx_equal(*[0, 0, Param3, Param4]), True, 'incorrect function return value encountered')"], "add_params": null, "test_name": "279532e93ae84bd9bed1bf90f4428941"}, {"fn_name": "approx_equal", "stmts_list": ["Param3 = type('',(object,), {})()", "Param4 = type('',(object,), {})()", "self.assertNotRaises(self.module.approx_equal, *[0, 0, Param3, Param4])", "self.assertEqual(self.module.approx_equal(*[0, 0, Param3, Param4]), True, 'incorrect function return value encountered')"], "add_params": null, "test_name": "7d897a945669483eaf9014b505499792"}, {"fn_name": "approx_equal", "stmts_list": ["Param3 = type('',(object,), {})()", "Param4 = type('',(object,), {})()", "self.assertNotRaises(self.module.approx_equal, *[1461055374234865915, 0, Param3, Param4])", "self.assertEqual(self.module.approx_equal(*[1461055374234865915, 0, Param3, Param4]), True, 'incorrect function return value encountered')"], "add_params": null, "test_name": "db2798d8e21d42b286eda749dc3c90a0"}, {"fn_name": "approx_equal", "stmts_list": ["Param3 = type('',(object,), {})()", "Param4 = type('',(object,), {})()", "self.assertNotRaises(self.module.approx_equal, *[2335276838901610646, 0, Param3, Param4])", "self.assertEqual(self.module.approx_equal(*[2335276838901610646, 0, Param3, Param4]), True, 'incorrect function return value encountered')"], "add_params": null, "test_name": "9ccca1aefaf043609f7c0708e9a6578e"}, {"fn_name": "approx_equal", "stmts_list": ["Param3 = type('',(object,), {})()", "Param4 = type('',(object,), {})()", "self.assertNotRaises(self.module.approx_equal, *[570933242364456186, 0, Param3, Param4])", "self.assertEqual(self.module.approx_equal(*[570933242364456186, 0, Param3, Param4]), True, 'incorrect function return value encountered')"], "add_params": null, "test_name": "dae1ff1641fb49548f30b26f54c47566"}, {"fn_name": "approx_equal", "stmts_list": ["Param3 = type('',(object,), {})()", "Param4 = type('',(object,), {})()", "self.assertNotRaises(self.module.approx_equal, *[994, 0, Param3, Param4])", "self.assertEqual(self.module.approx_equal(*[994, 0, Param3, Param4]), True, 'incorrect function return value encountered')"], "add_params": null, "test_name": "42c9a9e6dc2442af971d7d2278bf7400"}, {"fn_name": "approx_equal", "stmts_list": ["Param3 = type('',(object,), {})()", "Param4 = type('',(object,), {})()", "self.assertNotRaises(self.module.approx_equal, *[943, 0, Param3, Param4])", "self.assertEqual(self.module.approx_equal(*[943, 0, Param3, Param4]), True, 'incorrect function return value encountered')"], "add_params": null, "test_name": "f2ec09d613b146e48a487485c1b90e8e"}, {"fn_name": "approx_equal", "stmts_list": ["Param3 = type('',(object,), {})()", "Param4 = type('',(object,), {})()", "self.assertNotRaises(self.module.approx_equal, *[199, 0, Param3, Param4])", "self.assertEqual(self.module.approx_equal(*[199, 0, Param3, Param4]), True, 'incorrect function return value encountered')"], "add_params": null, "test_name": "11724f3966f947f8b3eda44d1d22324c"}, {"fn_name": "approx_equal", "stmts_list": ["Param3 = type('',(object,), {})()", "Param4 = type('',(object,), {})()", "self.assertNotRaises(self.module.approx_equal, *[8526227503029157372, 0, Param3, Param4])", "self.assertEqual(self.module.approx_equal(*[8526227503029157372, 0, Param3, Param4]), True, 'incorrect function return value encountered')"], "add_params": null, "test_name": "6389de1635ad4681bc8f70fc0eee1a27"}, {"fn_name": "approx_equal", "stmts_list": ["Param3 = type('',(object,), {})()", "Param4 = type('',(object,), {})()", "self.assertNotRaises(self.module.approx_equal, *[7084305517131841305, 0, Param3, Param4])", "self.assertEqual(self.module.approx_equal(*[7084305517131841305, 0, Param3, Param4]), True, 'incorrect function return value encountered')"], "add_params": null, "test_name": "c2061993b6404830bf7f44b70b66133d"}, {"fn_name": "approx_equal", "stmts_list": ["Param3 = type('',(object,), {})()", "Param4 = type('',(object,), {})()", "self.assertNotRaises(self.module.approx_equal, *[6508623219935938797, 0, Param3, Param4])", "self.assertEqual(self.module.approx_equal(*[6508623219935938797, 0, Param3, Param4]), True, 'incorrect function return value encountered')"], "add_params": null, "test_name": "5931703f73b043a09fa6fd7897df5a45"}, {"fn_name": "approx_equal", "stmts_list": ["Param3 = type('',(object,), {})()", "Param4 = type('',(object,), {})()", "self.assertNotRaises(self.module.approx_equal, *[6508623219935938797, -8736418112569525826, Param3, Param4])", "self.assertEqual(self.module.approx_equal(*[6508623219935938797, -8736418112569525826, Param3, Param4]), True, 'incorrect function return value encountered')"], "add_params": null, "test_name": "c8abae97e7c24627b26ca40cf7fccba4"}, {"fn_name": "approx_equal", "stmts_list": ["Param3 = type('',(object,), {})()", "Param4 = type('',(object,), {})()", "self.assertNotRaises(self.module.approx_equal, *[6508623219935938797, -7462078265811997708, Param3, Param4])", "self.assertEqual(self.module.approx_equal(*[6508623219935938797, -7462078265811997708, Param3, Param4]), True, 'incorrect function return value encountered')"], "add_params": null, "test_name": "bdb9cad9a3824a24b4a71b9a550e5623"}, {"fn_name": "approx_equal", "stmts_list": ["Param3 = type('',(object,), {})()", "Param4 = type('',(object,), {})()", "self.assertNotRaises(self.module.approx_equal, *[6508623219935938797, -7639708591453651354, Param3, Param4])", "self.assertEqual(self.module.approx_equal(*[6508623219935938797, -7639708591453651354, Param3, Param4]), True, 'incorrect function return value encountered')"], "add_params": null, "test_name": "0467fe21c54e477fa9eee3ae0faf96b9"}, {"fn_name": "approx_equal", "stmts_list": ["Param3 = type('',(object,), {})()", "Param4 = type('',(object,), {})()", "self.assertNotRaises(self.module.approx_equal, *[6508623219935938797, -4449899796604440793, Param3, Param4])", "self.assertEqual(self.module.approx_equal(*[6508623219935938797, -4449899796604440793, Param3, Param4]), True, 'incorrect function return value encountered')"], "add_params": null, "test_name": "a101114c4a604f94827ca235691bbd82"}, {"fn_name": "approx_equal", "stmts_list": ["Param3 = type('',(object,), {})()", "Param4 = type('',(object,), {})()", "self.assertNotRaises(self.module.approx_equal, *[6508623219935938797, -481283442090188829, Param3, Param4])", "self.assertEqual(self.module.approx_equal(*[6508623219935938797, -481283442090188829, Param3, Param4]), True, 'incorrect function return value encountered')"], "add_params": null, "test_name": "5749b95df7db47299d86cd617c92b208"}, {"fn_name": "approx_equal", "stmts_list": ["Param3 = type('',(object,), {})()", "Param4 = type('',(object,), {})()", "self.assertNotRaises(self.module.approx_equal, *[6508623219935938797, -3826906411031990765, Param3, Param4])", "self.assertEqual(self.module.approx_equal(*[6508623219935938797, -3826906411031990765, Param3, Param4]), True, 'incorrect function return value encountered')"], "add_params": null, "test_name": "a335fadb1fc841e5961e5191ece775ff"}, {"fn_name": "approx_equal", "stmts_list": ["Param3 = type('',(object,), {})()", "Param4 = type('',(object,), {})()", "self.assertNotRaises(self.module.approx_equal, *[6508623219935938797, -175, Param3, Param4])", "self.assertEqual(self.module.approx_equal(*[6508623219935938797, -175, Param3, Param4]), True, 'incorrect function return value encountered')"], "add_params": null, "test_name": "cb9ba04e1346493da5d6c15c943fc630"}, {"fn_name": "approx_equal", "stmts_list": ["Param3 = type('',(object,), {})()", "Param4 = type('',(object,), {})()", "self.assertNotRaises(self.module.approx_equal, *[6508623219935938797, -974, Param3, Param4])", "self.assertEqual(self.module.approx_equal(*[6508623219935938797, -974, Param3, Param4]), True, 'incorrect function return value encountered')"], "add_params": null, "test_name": "70b1615fc064437ab7fa8f78533100f6"}, {"fn_name": "approx_equal", "stmts_list": ["Param3 = type('',(object,), {})()", "Param4 = type('',(object,), {})()", "self.assertNotRaises(self.module.approx_equal, *[6508623219935938797, -929, Param3, Param4])", "self.assertEqual(self.module.approx_equal(*[6508623219935938797, -929, Param3, Param4]), True, 'incorrect function return value encountered')"], "add_params": null, "test_name": "0c03cdfb07ad496298bac507593d7f90"}, {"fn_name": "approx_equal", "stmts_list": ["Param3 = type('',(object,), {})()", "Param4 = type('',(object,), {})()", "self.assertNotRaises(self.module.approx_equal, *[6508623219935938797, 0, Param3, Param4])", "self.assertEqual(self.module.approx_equal(*[6508623219935938797, 0, Param3, Param4]), True, 'incorrect function return value encountered')"], "add_params": null, "test_name": "c2201b8f95fe4edea529318e0110f414"}, {"fn_name": "approx_equal", "stmts_list": ["Param3 = type('',(object,), {})()", "Param4 = type('',(object,), {})()", "self.assertNotRaises(self.module.approx_equal, *[6508623219935938797, 0, Param3, Param4])", "self.assertEqual(self.module.approx_equal(*[6508623219935938797, 0, Param3, Param4]), True, 'incorrect function return value encountered')"], "add_params": null, "test_name": "c9971c2475ff4ba3bfc4666c0ede86ea"}, {"fn_name": "approx_equal", "stmts_list": ["Param3 = type('',(object,), {})()", "Param4 = type('',(object,), {})()", "self.assertNotRaises(self.module.approx_equal, *[6508623219935938797, 0, Param3, Param4])", "self.assertEqual(self.module.approx_equal(*[6508623219935938797, 0, Param3, Param4]), True, 'incorrect function return value encountered')"], "add_params": null, "test_name": "966ebc90a8c7450ca5b6fbf527db8cd2"}, {"fn_name": "approx_equal", "stmts_list": ["Param3 = type('',(object,), {})()", "Param4 = type('',(object,), {})()", "self.assertNotRaises(self.module.approx_equal, *[6508623219935938797, 2299004351204935507, Param3, Param4])", "self.assertEqual(self.module.approx_equal(*[6508623219935938797, 2299004351204935507, Param3, Param4]), True, 'incorrect function return value encountered')"], "add_params": null, "test_name": "76c4dca96b474d52baac0504640b7ee5"}, {"fn_name": "approx_equal", "stmts_list": ["Param3 = type('',(object,), {})()", "Param4 = type('',(object,), {})()", "self.assertNotRaises(self.module.approx_equal, *[6508623219935938797, 718409013508866449, Param3, Param4])", "self.assertEqual(self.module.approx_equal(*[6508623219935938797, 718409013508866449, Param3, Param4]), True, 'incorrect function return value encountered')"], "add_params": null, "test_name": "79101415071941d5be7a87449e1c3859"}, {"fn_name": "approx_equal", "stmts_list": ["Param3 = type('',(object,), {})()", "Param4 = type('',(object,), {})()", "self.assertNotRaises(self.module.approx_equal, *[6508623219935938797, 3855680292900019305, Param3, Param4])", "self.assertEqual(self.module.approx_equal(*[6508623219935938797, 3855680292900019305, Param3, Param4]), True, 'incorrect function return value encountered')"], "add_params": null, "test_name": "5822eeaf63ff404b9090b69882f3ff21"}, {"fn_name": "approx_equal", "stmts_list": ["Param3 = type('',(object,), {})()", "Param4 = type('',(object,), {})()", "self.assertNotRaises(self.module.approx_equal, *[6508623219935938797, 223, Param3, Param4])", "self.assertEqual(self.module.approx_equal(*[6508623219935938797, 223, Param3, Param4]), True, 'incorrect function return value encountered')"], "add_params": null, "test_name": "3dc79d78883a4e56870b4da91d853236"}, {"fn_name": "approx_equal", "stmts_list": ["Param3 = type('',(object,), {})()", "Param4 = type('',(object,), {})()", "self.assertNotRaises(self.module.approx_equal, *[6508623219935938797, 126, Param3, Param4])", "self.assertEqual(self.module.approx_equal(*[6508623219935938797, 126, Param3, Param4]), True, 'incorrect function return value encountered')"], "add_params": null, "test_name": "589eab1d6e6f4f62af6b4ef499706a48"}, {"fn_name": "approx_equal", "stmts_list": ["Param3 = type('',(object,), {})()", "Param4 = type('',(object,), {})()", "self.assertNotRaises(self.module.approx_equal, *[6508623219935938797, 218, Param3, Param4])", "self.assertEqual(self.module.approx_equal(*[6508623219935938797, 218, Param3, Param4]), True, 'incorrect function return value encountered')"], "add_params": null, "test_name": "a8b65acefb91484f8ed93be6c78ea673"}, {"fn_name": "approx_equal", "stmts_list": ["Param3 = type('',(object,), {})()", "Param4 = type('',(object,), {})()", "self.assertNotRaises(self.module.approx_equal, *[6508623219935938797, 8031884445174416923, Param3, Param4])", "self.assertEqual(self.module.approx_equal(*[6508623219935938797, 8031884445174416923, Param3, Param4]), True, 'incorrect function return value encountered')"], "add_params": null, "test_name": "149d9192aa214c28b89f56dbaa2852c9"}, {"fn_name": "approx_equal", "stmts_list": ["Param3 = type('',(object,), {})()", "Param4 = type('',(object,), {})()", "self.assertNotRaises(self.module.approx_equal, *[6508623219935938797, 8194069775094425622, Param3, Param4])", "self.assertEqual(self.module.approx_equal(*[6508623219935938797, 8194069775094425622, Param3, Param4]), True, 'incorrect function return value encountered')"], "add_params": null, "test_name": "a57773f9b7b9462d94598f67052896cc"}, {"fn_name": "approx_equal", "stmts_list": ["Param3 = type('',(object,), {})()", "Param4 = type('',(object,), {})()", "self.assertNotRaises(self.module.approx_equal, *[6508623219935938797, 8404225380505660358, Param3, Param4])", "self.assertEqual(self.module.approx_equal(*[6508623219935938797, 8404225380505660358, Param3, Param4]), True, 'incorrect function return value encountered')"], "add_params": null, "test_name": "cde3abc933664290be3613fb861bd201"}, {"fn_name": "perm", "stmts_list": ["self.assertRaises(TypeError, self.module.perm, *[None, None])"], "add_params": null, "test_name": "all_None"}, {"fn_name": "perm", "stmts_list": ["self.assertRaises(TypeError, self.module.perm, *[None, None])"], "add_params": null, "test_name": "all_attr_None_wdef"}, {"fn_name": "perm", "stmts_list": ["self.assertRaises(TypeError, self.module.perm, *[None, None])"], "add_params": null, "test_name": "all_attr_MetaParam_wdef"}, {"fn_name": "perm", "stmts_list": ["Param1 = type('',(object,), {})()", "Param2 = type('',(object,), {})()", "self.assertRaises(TypeError, self.module.perm, *[Param1, Param2])"], "add_params": null, "test_name": "6c92bb388a07410fb605972dff0127c4"}, {"fn_name": "perm", "stmts_list": ["Param1 = type('',(object,), {})()", "self.assertRaises(TypeError, self.module.perm, *[Param1, 0])"], "add_params": null, "test_name": "2e6abcc574504c39850f2bac58dd6bf3"}, {"fn_name": "perm", "stmts_list": ["self.assertNotRaises(self.module.perm, *[0, 0])", "self.assertEqual(self.module.perm(*[0, 0]), 1, 'incorrect function return value encountered')"], "add_params": null, "test_name": "3a325e3a4e60413bb13eca033b1553a9"}, {"fn_name": "perm", "stmts_list": ["self.assertNotRaises(self.module.perm, *[1, 0])", "self.assertEqual(self.module.perm(*[1, 0]), 1, 'incorrect function return value encountered')"], "add_params": null, "test_name": "fd60de189d8f44099d9a481566f4d148"}, {"fn_name": "perm", "stmts_list": ["self.assertNotRaises(self.module.perm, *[0, 0])", "self.assertEqual(self.module.perm(*[0, 0]), 1, 'incorrect function return value encountered')"], "add_params": null, "test_name": "b5cd59159f1946f589f1d0e3728b533c"}, {"fn_name": "perm", "stmts_list": ["self.assertNotRaises(self.module.perm, *[0, 0])", "self.assertEqual(self.module.perm(*[0, 0]), 1, 'incorrect function return value encountered')"], "add_params": null, "test_name": "fe8eec8e76c54ec389f8b3093d6a0019"}, {"fn_name": "perm", "stmts_list": ["self.assertNotRaises(self.module.perm, *[0, 0])", "self.assertEqual(self.module.perm(*[0, 0]), 1, 'incorrect function return value encountered')"], "add_params": null, "test_name": "c04700ba307e451296848d6ef3d3a935"}, {"fn_name": "perm", "stmts_list": ["self.assertNotRaises(self.module.perm, *[757, 0])", "self.assertEqual(self.module.perm(*[757, 0]), 1L, 'incorrect function return value encountered')"], "add_params": null, "test_name": "5fd15087f9854ab58bfa58ec67b59a65"}, {"fn_name": "perm", "stmts_list": ["self.assertNotRaises(self.module.perm, *[465, 0])", "self.assertEqual(self.module.perm(*[465, 0]), 1L, 'incorrect function return value encountered')"], "add_params": null, "test_name": "7017f5a4c4e745e3b8bbbaca3b2bbb44"}, {"fn_name": "perm", "stmts_list": ["self.assertNotRaises(self.module.perm, *[793, 0])", "self.assertEqual(self.module.perm(*[793, 0]), 1L, 'incorrect function return value encountered')"], "add_params": null, "test_name": "372ab171a348497b8035515f12b2f321"}, {"fn_name": "argmax", "stmts_list": ["self.assertRaises(TypeError, self.module.argmax, *[None])"], "add_params": null, "test_name": "all_None"}, {"fn_name": "argmax", "stmts_list": ["self.assertRaises(TypeError, self.module.argmax, *[None])"], "add_params": null, "test_name": "all_attr_None_wdef"}, {"fn_name": "argmax", "stmts_list": ["self.assertRaises(TypeError, self.module.argmax, *[None])"], "add_params": null, "test_name": "all_attr_MetaParam_wdef"}, {"fn_name": "argmax", "stmts_list": ["Param1 = type('',(object,), {})()", "self.assertRaises(TypeError, self.module.argmax, *[Param1])"], "add_params": null, "test_name": "5fe63084cde8447f8311ce3d42c7049a"}, {"fn_name": "argmax", "stmts_list": ["Param1 = type('',(object,), {})()", "self.assertRaises(TypeError, self.module.argmax, *[Param1])"], "add_params": null, "test_name": "b267d6b7aff44a30806ed9988fc6b85b"}, {"fn_name": "argmax", "stmts_list": ["Param1 = type('',(object,), {})()", "self.assertRaises(TypeError, self.module.argmax, *[Param1])"], "add_params": null, "test_name": "90eec8ae2a2a431eb81304d53a3dae25"}, {"fn_name": "mean", "stmts_list": ["self.assertRaises(TypeError, self.module.mean, *[None])"], "add_params": null, "test_name": "all_None"}, {"fn_name": "mean", "stmts_list": ["self.assertRaises(TypeError, self.module.mean, *[None])"], "add_params": null, "test_name": "all_attr_None_wdef"}, {"fn_name": "mean", "stmts_list": ["self.assertRaises(TypeError, self.module.mean, *[None])"], "add_params": null, "test_name": "all_attr_MetaParam_wdef"}, {"fn_name": "mean", "stmts_list": ["Param1 = type('',(object,), {})()", "self.assertRaises(TypeError, self.module.mean, *[Param1])"], "add_params": null, "test_name": "3f5e12f197c14380b0a51e60e4118d19"}, {"fn_name": "mean", "stmts_list": ["Param1 = type('',(object,), {})()", "self.assertRaises(TypeError, self.module.mean, *[Param1])"], "add_params": null, "test_name": "c2a640b8ae1e48e1a110391a15a533d8"}, {"fn_name": "mean", "stmts_list": ["Param1 = type('',(object,), {})()", "self.assertRaises(TypeError, self.module.mean, *[Param1])"], "add_params": null, "test_name": "45e29a753ace4029a4542c8f50ee3ce9"}]
