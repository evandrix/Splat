% This file was created with JabRef 2.7.
% Encoding: MacRoman

@inproceedings{Bertolino2007,
 author = {Bertolino, Antonia},
 title = {Software Testing Research: Achievements, Challenges, Dreams},
 booktitle = {2007 Future of Software Engineering},
 series = {FOSE '07},
 year = {2007},
 isbn = {0-7695-2829-5},
 pages = {85--103},
 numpages = {19},
 url = {http://dx.doi.org/10.1109/FOSE.2007.25},
 doi = {http://dx.doi.org/10.1109/FOSE.2007.25},
 acmid = {1254712},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
} 

@INPROCEEDINGS{Harrold00,
    author = {Mary Jean Harrold},
    title = {Testing: A Roadmap},
    booktitle = {In The Future of Software Engineering},
    year = {2000},
    pages = {61--72},
    publisher = {ACM Press}
}

@article{InceDC1987,
    abstract = {{One of the major time-consuming activities in a software project is the construction of test data. A major aim of testing research is to automate this process by means of software tools. This paper reviews the progress that has been made towards achieving that aim. It poses a number of questions which future researchers in automatic testing will have to answer.}},
    author = {Ince, D. C.},
    citeulike-article-id = {801438},
    journal = {The Computer Journal},
    keywords = {security, testing},
    number = {1},
    pages = {63--69},
    posted-at = {2006-08-15 00:58:05},
    priority = {0},
    title = {{The Automatic Generation of Test Data}},
    volume = {30},
    year = {1987}
}

@article{Ntafos1988,
 author = {Ntafos, S. C.},
 title = {A Comparison of Some Structural Testing Strategies},
 journal = {IEEE Trans. Softw. Eng.},
 volume = {14},
 issue = {6},
 month = {June},
 year = {1988},
 issn = {0098-5589},
 pages = {868--874},
 numpages = {7},
 url = {http://dx.doi.org/10.1109/32.6165},
 doi = {http://dx.doi.org/10.1109/32.6165},
 acmid = {631017},
 publisher = {IEEE Press},
 address = {Piscataway, NJ, USA},
 keywords = {program testing, programming theory, structural testing, structured programming},
} 

@article{Prather1987,
 author = {Prather, R. E. and Myers,Jr., J. P.},
 title = {The Path Prefix Software Testing Strategy},
 journal = {IEEE Trans. Softw. Eng.},
 volume = {13},
 issue = {7},
 month = {July},
 year = {1987},
 issn = {0098-5589},
 pages = {761--766},
 numpages = {6},
 url = {http://dl.acm.org/citation.cfm?id=29233.29234},
 doi = {10.1109/TSE.1987.233487},
 acmid = {29234},
 publisher = {IEEE Press},
 address = {Piscataway, NJ, USA},
 keywords = {software testing, Branch coverage, path selection, program flowgraph analysis},
} 

@article{ZhangW01,
  author    = {Jian Zhang and
               Xiaoxu Wang},
  title     = {A Constraint Solver and Its Application to Path Feasibility
               Analysis},
  journal   = {International Journal of Software Engineering and Knowledge
               Engineering},
  volume    = {11},
  number    = {2},
  year      = {2001},
  pages     = {139-156},
  ee        = {http://dx.doi.org/10.1142/S0218194001000487},
  bibsource = {DBLP, http://dblp.uni-trier.de}
}

@article{Korel1990,
 author = {Korel, B.},
 title = {Automated Software Test Data Generation},
 journal = {IEEE Trans. Softw. Eng.},
 volume = {16},
 issue = {8},
 month = {August},
 year = {1990},
 issn = {0098-5589},
 pages = {870--879},
 numpages = {10},
 url = {http://dl.acm.org/citation.cfm?id=101747.101755},
 doi = {10.1109/32.57624},
 acmid = {101755},
 publisher = {IEEE Press},
 address = {Piscataway, NJ, USA},
 keywords = {array indexes, automated software test data generation, automatic programming, backtracking, data structures, dynamic data structures, dynamic data-flow analysis, function-minimization methods, function-minimization search algorithms, input variables, minimisation, pointers, program behavior, program execution flow, program testing, search problems.},
} 

@inproceedings{Lakhotia2009,
 author = {Lakhotia, Kiran and McMinn, Phil and Harman, Mark},
 title = {Automated Test Data Generation for Coverage: Haven't We Solved This Problem Yet?},
 booktitle = {Proceedings of the 2009 Testing: Academic and Industrial Conference - Practice and Research Techniques},
 series = {TAIC-PART '09},
 year = {2009},
 isbn = {978-0-7695-3820-4},
 pages = {95--104},
 numpages = {10},
 url = {http://dx.doi.org/10.1109/TAICPART.2009.15},
 doi = {http://dx.doi.org/10.1109/TAICPART.2009.15},
 acmid = {1730270},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
 keywords = {Automated test data generation, concolic testing, search based testing},
} 

@INPROCEEDINGS{Rothermel99testcase,
    author = {Gregg Rothermel and Roland H. Untch},
    title = {Test case prioritization: An empirical study},
    booktitle = {In Proceedings of the International Conference on Software Maintenance},
    year = {1999},
    pages = {179--188}
}

@inbook{Tracey2002,
   author = {Tracey, Nigel and Clark, John and McDermid, John and Mander, Keith},
   title = {A search-based automated test-data generation framework for safety-critical systems},
   book = {Systems engineering for business process change},
   year = {2002},
   isbn = {1-85233-399-5},
   pages = {174--213},
   numpages = {40},
   url = {http://dl.acm.org/citation.cfm?id=763012.763025},
   acmid = {763025},
   publisher = {Springer-Verlag New York, Inc.},
   address = {New York, NY, USA},
} 

@MISC{Pep20ZenPython,
  author = {Tim Peters},
  title = {{PEP 20 -- The Zen of Python}},
  howpublished = "\url{http://www.python.org/dev/peps/pep-0020/}",
  year = {2004},
  note = "[Online; accessed 7-January-2012]"
}

@MISC{TiobeDec11,
  author = {TIOBE Software BV},
  title = {{TIOBE Programming Community Index for December 2011}},
  howpublished = "\url{http://www.tiobe.com/index.php/content/paperinfo/tpci/index.html}",
  year = {2011},
  note = "[Online; accessed 7-January-2012]"
}

@MISC{ChromeBugBounties,
  author = {Gregg Keizer},
  title = {{Computerworld News Article: Security - Google pays record \$26K in Chrome bug bounties}},
  howpublished = "\url{http://www.computerworld.com/s/article/9221186/Google_pays_record_26K_in_Chrome_bug_bounties}",
  year = {2011},
  note = "[Online; accessed 6-January-2012]"
}

@MISC{Edvardsson99asurvey,
  author = {Jon Edvardsson},
  title = {A Survey on Automatic Test Data Generation},
  year = {1999}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
@INPROCEEDINGS{Allwood2011,
  author = {Tristan O. R. Allwood and Cristian Cadar and Susan Eisenbach},
  title = {High coverage testing of Haskell programs},
  booktitle = {Proceedings of the 20th International Symposium on Software Testing
	and Analysis, ISSTA 2011, Toronto, ON, Canada, July 17-21, 2011},
  year = {2011},
  editor = {Matthew B. Dwyer and Frank Tip},
  pages = {375-385},
  publisher = {ACM},
  citedby = {0},
  cites = {0},
  doi = {http://doi.acm.org/10.1145/2001420.2001465},
  file = {:/Users/lwy08/Downloads/FYP_2011/existing_work/IRULAN/thesis.pdf:PDF;:/Users/lwy08/Downloads/FYP_2011/existing_work/IRULAN/ah09slides.pdf:PDF;:/Users/lwy08/Downloads/FYP_2011/existing_work/IRULAN/Report.pdf:PDF},
  isbn = {978-1-4503-0562-4},
  owner = {lwy08},
  researchr = {http://researchr.org/publication/AllwoodCE11},
  tags = {coverage, testing, Haskell},
  timestamp = {2011.11.11}
}

@ARTICLE{Andreou2007,
  author = {Andreas S. Andreou and Kypros A. Economides and Anastasis A. Sofokleous},
  title = {An Automatic Software Test-Data Generation Scheme Based on Data Flow
	Criteria and Genetic Algorithms},
  journal = {Computer and Information Technology, International Conference on},
  year = {2007},
  volume = {0},
  pages = {867-872},
  address = {Los Alamitos, CA, USA},
  doi = {http://doi.ieeecomputersociety.org/10.1109/CIT.2007.97},
  file = {:/Users/lwy08/Downloads/FYP_2011/dataflow-testing/04385194.pdf:PDF},
  isbn = {0-7695-2983-6},
  owner = {lwy08},
  publisher = {IEEE Computer Society},
  timestamp = {2011.11.11}
}

@INPROCEEDINGS{BenAsher2009,
  author = {Ben Asher, Yosi and Rotem, Nadav},
  title = {The effect of unrolling and inlining for Python bytecode optimizations},
  booktitle = {Proceedings of SYSTOR 2009: The Israeli Experimental Systems Conference},
  year = {2009},
  series = {SYSTOR '09},
  pages = {14:1--14:14},
  address = {New York, NY, USA},
  publisher = {ACM},
  acmid = {1534550},
  articleno = {14},
  doi = {http://doi.acm.org/10.1145/1534530.1534550},
  file = {:/Users/lwy08/Downloads/FYP/papers/a14-ben_asher.pdf:PDF},
  isbn = {978-1-60558-623-6},
  keywords = {Python, bytecode, dynamic languages, optimizations},
  location = {Haifa, Israel},
  numpages = {14},
  url = {http://doi.acm.org/10.1145/1534530.1534550}
}

@INPROCEEDINGS{Cheon2005,
  author = {Yoonsik Cheon and Myoung Yee Kim and Myoung Yee Kim and Ashaveena
	Perum and Ashaveena Perum},
  title = {A complete automation of unit testing for Java programs},
  booktitle = {In Proceedings of the 2005 International Conference on Software Engineering
	Research and Practice},
  year = {2005},
  pages = {290--295},
  publisher = {CSREA Press},
  file = {:/Users/lwy08/Downloads/FYP/papers/complete-automation-java.pdf:PDF}
}

@ARTICLE{Dara2009,
  author = {Rozita Dara and Shimin Li and Weining Liu and Angi Smith-Ghorbani
	and Ladan Tahvildari},
  title = {Using dynamic execution data to generate test cases},
  journal = {Software Maintenance, IEEE International Conference on},
  year = {2009},
  volume = {0},
  pages = {433-436},
  address = {Los Alamitos, CA, USA},
  doi = {http://doi.ieeecomputersociety.org/10.1109/ICSM.2009.5306294},
  file = {:/Users/lwy08/Downloads/FYP/requirements-based-testing/05306294.pdf:PDF},
  isbn = {978-1-4244-4897-5},
  owner = {lwy08},
  publisher = {IEEE Computer Society},
  timestamp = {2011.11.11}
}

@INPROCEEDINGS{Gupta2008,
  author = {Nirmal Kumar Gupta and Mukesh Kumar Rohil},
  title = {Using Genetic Algorithm for Unit Testing of Object Oriented Software},
  booktitle = {Proceedings of the 1st International Conference on Emerging Trends
	in Engineering and Technology (ICETET '08)},
  year = {2008},
  pages = {308--313},
  month = jul,
  publisher = {IEEE},
  abstract = {Genetic algorithms have been successfully applied in the area of software
	testing. The demand for automation of test case generation in object
	oriented software testing is increasing. Genetic algorithms are well
	applied in procedural software testing but a little has been done
	in testing of object oriented software. In this paper, we propose
	a method to generate test cases for classes in object oriented software
	using a genetic programming approach. This method uses tree representation
	of statements in test cases. Strategies for encoding the test cases
	and using the objective function to evolve them as suitable test
	case are proposed.},
  bibsource = {http://www.sebase.org/sbse/publications/repository.html},
  doi = {doi:10.1109/ICETET.2008.137},
  file = {:/Users/lwy08/Downloads/FYP/papers/paper11.pdf:PDF},
  keywords = {genetic algorithms, genetic programming, object-oriented methods,
	program testing, object oriented software unit testing, test case
	generation},
  notes = {Also known as \cite{4579916}
	
	 Java, HTMLparser},
  size = {6 pages}
}

@ARTICLE{Han2008,
  author = {Seung-Hee Han and Yong-Rae Kwon},
  title = {An Empirical Evaluation of Test Data Generation Techniques},
  journal = {J. Computing Science and Engineering},
  year = {2008},
  month = {Sep},
  file = {:/Users/lwy08/Downloads/FYP/existing_work/Survey.pdf:PDF},
  owner = {lwy08},
  timestamp = {2011.11.11}
}

@INPROCEEDINGS{Korel2005,
  author = {Korel, Bogdan and Harman, Mark and Chung, S. and Apirukvorapinit,
	P. and Gupta, R. and Zhang, Q.},
  title = {Data Dependence Based Testability Transformation in Automated Test
	Generation},
  booktitle = {Proceedings of the 16th IEEE International Symposium on Software
	Reliability Engineering},
  year = {2005},
  pages = {245--254},
  address = {Washington, DC, USA},
  publisher = {IEEE Computer Society},
  __markedentry = {[lwy08:6]},
  acmid = {1105253},
  doi = {10.1109/ISSRE.2005.16},
  file = {:/Users/lwy08/Downloads/FYP/testability-transformation-src/Qi-Zhang.pdf:PDF},
  isbn = {0-7695-2482-6},
  numpages = {10},
  owner = {lwy08},
  timestamp = {2011.11.11},
  url = {http://dl.acm.org/citation.cfm?id=1104997.1105253}
}

@INPROCEEDINGS{Mairhofer2011,
  author = {Stefan Mairhofer and Robert Feldt and Richard Torkar},
  title = {Search-based Software Testing and Test Data Generation for a Dynamic
	Programming Language},
  booktitle = {Proceedings of the Genetic and Evolutionary Computation Conference
	(GECCO)},
  year = {2011},
  pages = {1859--1866},
  publisher = {ACM},
  file = {:/Users/lwy08/Downloads/FYP/existing_work/ruteg_pres.pdf:PDF;:/Users/lwy08/Downloads/FYP/existing_work/ruteg_report.pdf:PDF},
  keywords = {Search-based Software Engineering; Testing; Object-oriented programming;
	Dynamic language},
  owner = {lwy08},
  timestamp = {2011.11.11},
  url = {http://www.cse.chalmers.se/~feldt/publications/mairhofer_2011_gecco.html}
}

@ARTICLE{McMinn2004,
  author = {McMinn, Phil},
  title = {Search-based software test data generation: a survey: Research Articles},
  journal = {Softw. Test. Verif. Reliab.},
  year = {2004},
  volume = {14},
  pages = {105--156},
  month = {June},
  acmid = {1077279},
  address = {Chichester, UK},
  doi = {10.1002/stvr.v14:2},
  issn = {0960-0833},
  issue = {2},
  keywords = {automated software test data generation, evolutionary algorithms,
	evolutionary testing, metaheuristic search, search-based software
	engineering, simulated annealing},
  numpages = {52},
  publisher = {John Wiley and Sons Ltd.},
  url = {http://dl.acm.org/citation.cfm?id=1077276.1077279}
}

@INPROCEEDINGS{Michael1997,
  author = {Michael, C. C. and McGraw, G. E. and Schatz, M. A. and Walton, C.
	C.},
  title = {Genetic algorithms for dynamic test data generation},
  booktitle = {Proceedings of the 12th international conference on Automated software
	engineering (formerly: KBSE)},
  year = {1997},
  series = {ASE '97},
  pages = {307--},
  address = {Washington, DC, USA},
  publisher = {IEEE Computer Society},
  acmid = {786793},
  file = {:/Users/lwy08/Downloads/FYP/papers/atc2gp.pdf:PDF},
  isbn = {0-8186-7961-1},
  keywords = {combinatorial optimization, genetic algorithms, program features,
	random test generation, software testing, test adequacy criteria,
	test data generation, test generation},
  url = {http://dl.acm.org/citation.cfm?id=786767.786793}
}

@ARTICLE{Murrill2007,
  author = {Branson W. Murrill},
  title = {Automated Test Data Generation and Reliability Assessment for Software
	in High Assurance Systems},
  journal = {High-Assurance Systems Engineering, IEEE International Symposium
	on},
  year = {2007},
  volume = {0},
  pages = {409-410},
  address = {Los Alamitos, CA, USA},
  doi = {http://doi.ieeecomputersociety.org/10.1109/HASE.2007.63},
  file = {:/Users/lwy08/Downloads/FYP/perturbation-analysis/04404778.pdf:PDF},
  issn = {1530-2059},
  owner = {lwy08},
  publisher = {IEEE Computer Society},
  timestamp = {2011.11.11}
}

@INPROCEEDINGS{Pacheco2007,
  author = {Carlos Pacheco and Shuvendu K. Lahiri and Michael D. Ernst and Thomas
	Ball},
  title = {Feedback-directed random test generation},
  booktitle = {In ICSE},
  year = {2007},
  publisher = {IEEE Computer Society}
}

@INPROCEEDINGS{AlexGroceSep2011,
  author = {Alex Groce \& Chaoqiang Zhang \& Eric Eide \& Yang Chen \& John Regehr},
  title = {Swarm Testing},
  booktitle = {Swarm Testing},
  year = {Sep 2011},
  organization = {Oregon State University, Corvallis, OR; University of Utah},
  file = {:/Users/lwy08/Downloads/FYP/papers/swarm12.pdf:PDF},
  timestamp = {2011.10.27}
}

@ARTICLE{Seesing2006,
  author = {Arjan Seesing and Hans-Gerhard Gross},
  title = {A Genetic Programming Approach to Automated Test Generation for Object-Oriented
	Software},
  journal = {International Transactions on Systems Science and Applications},
  year = {2006},
  volume = {1},
  pages = {127--134},
  number = {2},
  month = sep,
  note = {Special Issue Section on Evaluation of Novel Approaches to Software
	Engineering Guest Editors: Pericles Loucopoulos and Kalle Lyytinen},
  abstract = {This article proposes a new method for creating test software for
	object-oriented systems using a genetic programming approach. It
	is believed that this approach is advantageous over the more established
	search-based test-case generation approaches because the test software
	is represented and altered as a fully functional computer program.
	Genetic programming (GP) uses a tree-shaped data structure which
	is more directly comparable and suitable for being mapped instantly
	to abstract syntax trees commonly used in computer languages and
	compilers. These structures can be manipulated and executed directly,
	bypassing intricate and error prone conversion procedures between
	different representations. In addition, tree structures make more
	operations possible, which keep the structure and semantics of the
	evolving test software better intact during program evolution, compared
	to linear structures. This speeds up the evolutionary program generation
	process because the loss of evolved structures due to mutations and
	crossover is prevented more effectively.},
  bibsource = {DBLP, http://dblp.uni-trier.de},
  file = {:/Users/lwy08/Downloads/FYP/papers/10.1.1.97.4413.pdf:PDF},
  issn = {1751-1461},
  keywords = {genetic algorithms, genetic programming, SBSE, search-based testing,
	test automation, object-oriented programming},
  notes = {ITSSA http://siwn.org.uk/press/sai/itssa0001.htm}
}

@INPROCEEDINGS{Sy2001,
  author = {Nguyen Tran Sy and Yves Deville},
  title = {Automatic Test Data Generation for Programs with Integer and Float
	Variables},
  booktitle = {In 16th IEEE International Conference on Automated Software Engineering(ASE01},
  year = {2001},
  pages = {3--21},
  file = {:/Users/lwy08/Downloads/FYP/domain-testing/IntFloats.pdf:PDF},
  owner = {lwy08},
  timestamp = {2011.11.11}
}

@MISC{Tahbildar,
  author = {Hitesh Tahbildar and Bichitra Kalita},
  title = {AUTOMATED SOFTWARE TEST DATA GENERATION: DIRECTION OF RESEARCH},
  year = {}
}

@INPROCEEDINGS{Tracey1998,
  author = {Nigel Tracey and John Clark and Keith Mander and John Mcdermid and
	Heslington York},
  title = {An automated framework for structural test-data generation},
  booktitle = {Proceedings of the International Conference on Automated Software
	Engineering; IEEE},
  year = {1998},
  __markedentry = {[lwy08:]},
  file = {:/Users/lwy08/Downloads/FYP/structural-testing/njt-oct98.pdf:PDF},
  owner = {lwy08},
  timestamp = {2011.11.11}
}

@INPROCEEDINGS{Zhao2003,
  author = {Zhao, R. and Lyu, M.R. and Yinghua Min},
  title = {Domain testing based on character string predicate [software testing]},
  booktitle = {Test Symposium, 2003. ATS 2003. 12th Asian},
  year = {2003},
  pages = { 96 - 101},
  month = {nov.},
  abstract = {Domain testing is a well-known software testing technique. Although
	research tasks have been initiated in domain testing, automatic test
	data generation based on character string predicates has not yet
	been reported. This paper presents a novel approach to automatically
	generate ON-OFF test points for character string predicate borders
	associated with program paths, and describes a corresponding test
	data generator control flow based testing Slices with respect to
	predicates on paths are constructed to calculate the current values
	of variables in the predicates via program slicing techniques. Each
	character element of variables in a character string predicate is
	dynamically determined in turn by function minimization so that the
	ON-OFF test points for the predicate border can be automatically
	generated. The preliminary experimental results show that this approach
	is promising and effective.},
  doi = {10.1109/ATS.2003.1250790},
  file = {:/Users/lwy08/Downloads/FYP/domain-testing/CharStrPredicate-pres.ppt:PowerPoint;:/Users/lwy08/Downloads/FYP/domain-testing/CharStrPredicate-report.pdf:PDF},
  issn = {1081-7735},
  keywords = { ON-OFF test point generation; automatic test data generation; character
	string predicate borders; control flow based testing technique; domain
	testing; function minimization; program slicing techniques; software
	testing; test data generator; program slicing; program testing;},
  owner = {lwy08},
  timestamp = {2011.11.11}
}

@MISC{MutantGene,
  author = {Selvakumar Subramanian and Ramaraj Natarajan},
  title = {A Tool for Generation and Minimization of Test Suite by Mutant Gene
	Algorithm},
  file = {:/Users/lwy08/Downloads/FYP/mutation-testing/MutantGeneAlgorithm.pdf:PDF},
  owner = {lwy08},
  timestamp = {2011.11.11}
}

@MISC{PyModel,
  author = {Jonathan Jacky},
  file = {:/Users/lwy08/Downloads/FYP/papers/pymodel-scipy2011.pdf:PDF},
  howpublished = {\url{http://staff.washington.edu/jon/pymodel/www/}},
  month = mar,
  title = {PyModel: Model-based testing in Python},
  year = {2010}
}

@MISC{MutationGA,
  author = {Leonardo Bottaci},
  title = {A Genetic Algorithm Fitness Function for Mutation Testing},
  month = apr,
  year = {2001},
  file = {:/Users/lwy08/Downloads/FYP/mutation-testing/GAFitnessFnForMutationTesting.pdf:PDF},
  owner = {lwy08},
  timestamp = {2011.11.11}
}

@comment{jabref-meta: selector_review:}

@comment{jabref-meta: selector_publisher:}

@comment{jabref-meta: selector_author:}

@comment{jabref-meta: selector_journal:}

@comment{jabref-meta: selector_keywords:}

@comment{jabref-meta: groupsversion:3;}

@comment{jabref-meta: groupstree:
0 AllEntriesGroup:;
1 ExplicitGroup:dataflow-testing\;0\;Andreou2007\;;
1 ExplicitGroup:domain-testing\;0\;Sy2001\;Zhao2003\;;
1 ExplicitGroup:existing_work\;0\;Allwood2011\;Han2008\;Mairhofer2011\
;;
1 ExplicitGroup:mutation-testing\;0\;2001\;;
1 ExplicitGroup:perturbation-analysis\;0\;Murrill2007\;;
1 ExplicitGroup:requirements-based-testing\;0\;Dara2009\;;
1 ExplicitGroup:structural-testing\;0\;Tracey1998\;;
1 ExplicitGroup:test-data-generation\;0\;;
1 ExplicitGroup:testability-transformation\;0\;Korel2005\;;
1 ExplicitGroup:testing-discussion\;0\;;
1 ExplicitGroup:pypy-unladen-swallow\;0\;;
}

